//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    With additional support for multiple files.
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Infrastructure.Models
{
	using System;
	using System.Collections.Generic;
	using System.Linq;

	using Infrastructure.Core.Business.Data;

	using LinqToDB;
	using LinqToDB.Mapping;

	[Table("moves")]
	public partial class Move : BusinessData
	{
		[Column("id"),                      PrimaryKey,  NotNull] public int    Id                   { get; set; } // int(11)
		[Column("identifier"),                           NotNull] public string Identifier           { get; set; } // varchar(79)
		[Column("generation_id"),                        NotNull] public int    GenerationId         { get; set; } // int(11)
		[Column("type_id"),                              NotNull] public int    TypeId               { get; set; } // int(11)
		[Column("power"),                      Nullable         ] public short? Power                { get; set; } // smallint(6)
		[Column("pp"),                         Nullable         ] public short? Pp                   { get; set; } // smallint(6)
		[Column("accuracy"),                   Nullable         ] public short? Accuracy             { get; set; } // smallint(6)
		[Column("priority"),                             NotNull] public short  Priority             { get; set; } // smallint(6)
		[Column("target_id"),                            NotNull] public int    TargetId             { get; set; } // int(11)
		[Column("damage_class_id"),                      NotNull] public int    DamageClassId        { get; set; } // int(11)
		[Column("effect_id"),                            NotNull] public int    EffectId             { get; set; } // int(11)
		[Column("effect_chance"),              Nullable         ] public int?   EffectChance         { get; set; } // int(11)
		[Column("contest_type_id"),            Nullable         ] public int?   ContestTypeId        { get; set; } // int(11)
		[Column("contest_effect_id"),          Nullable         ] public int?   ContestEffectId      { get; set; } // int(11)
		[Column("super_contest_effect_id"),    Nullable         ] public int?   SuperContestEffectId { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// conquest_move_data_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public ConquestMoveData Conquestmovedataibfk { get; set; }

		/// <summary>
		/// conquest_pokemon_moves_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ConquestPokemonMove> Conquestpokemonibfks { get; set; }

		/// <summary>
		/// contest_combos_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="SecondMoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContestCombo> ContestCombosIbfk2BackReferences { get; set; }

		/// <summary>
		/// contest_combos_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="FirstMoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ContestCombo> Contestcombosibfks { get; set; }

		/// <summary>
		/// moves_ibfk_3
		/// </summary>
		[Association(ThisKey="ContestEffectId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="moves_ibfk_3", BackReferenceName="Movesibfks")]
		public ContestEffect ContestEffect { get; set; }

		/// <summary>
		/// moves_ibfk_1
		/// </summary>
		[Association(ThisKey="ContestTypeId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="moves_ibfk_1", BackReferenceName="Movesibfks")]
		public ContestType ContestType { get; set; }

		/// <summary>
		/// moves_ibfk_8
		/// </summary>
		[Association(ThisKey="DamageClassId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="moves_ibfk_8", BackReferenceName="Movesibfks")]
		public MoveDamageClass DamageClass { get; set; }

		/// <summary>
		/// moves_ibfk_5
		/// </summary>
		[Association(ThisKey="EffectId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="moves_ibfk_5", BackReferenceName="Movesibfks")]
		public MoveEffect Effect { get; set; }

		/// <summary>
		/// moves_ibfk_7
		/// </summary>
		[Association(ThisKey="GenerationId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="moves_ibfk_7", BackReferenceName="Movesibfks")]
		public Generation Generation { get; set; }

		/// <summary>
		/// machines_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Machine> Machinesibfks { get; set; }

		/// <summary>
		/// move_changelog_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<MoveChangelog> Movechangelogibfks { get; set; }

		/// <summary>
		/// move_flag_map_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<MoveFlagMap> Moveflagmapibfks { get; set; }

		/// <summary>
		/// move_flavor_summaries_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<MoveFlavorSummary> Moveflavorsummariesibfks { get; set; }

		/// <summary>
		/// move_flavor_text_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<MoveFlavorText> Moveflavortextibfks { get; set; }

		/// <summary>
		/// move_meta_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public MoveMeta Movemetaibfk { get; set; }

		/// <summary>
		/// move_meta_stat_changes_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<MoveMetaStatChange> Movemetastatchangesibfks { get; set; }

		/// <summary>
		/// move_names_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<MoveName> Movenamesibfks { get; set; }

		/// <summary>
		/// pokemon_evolution_ibfk_7_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="KnownMoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<PokemonEvolution> Pokemonevolutionibfks { get; set; }

		/// <summary>
		/// pokemon_moves_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<PokemonMove> Pokemonibfks { get; set; }

		/// <summary>
		/// super_contest_combos_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="FirstMoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SuperContestCombo> SuperContestCombosIbfk2BackReferences { get; set; }

		/// <summary>
		/// super_contest_combos_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="SecondMoveId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SuperContestCombo> Supercontestcombosibfks { get; set; }

		/// <summary>
		/// moves_ibfk_2
		/// </summary>
		[Association(ThisKey="SuperContestEffectId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="moves_ibfk_2", BackReferenceName="Movesibfks")]
		public SuperContestEffect SuperContestEffect { get; set; }

		/// <summary>
		/// moves_ibfk_4
		/// </summary>
		[Association(ThisKey="TargetId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="moves_ibfk_4", BackReferenceName="Movesibfks")]
		public MoveTarget Target { get; set; }

		/// <summary>
		/// moves_ibfk_6
		/// </summary>
		[Association(ThisKey="TypeId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="moves_ibfk_6", BackReferenceName="Movesibfks")]
		public Type Type { get; set; }

		#endregion
	}
}

#pragma warning restore 1591
